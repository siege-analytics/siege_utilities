# ================================================================
# FILE: pytest.ini
# ================================================================
[tool:pytest]
# Test discovery and execution
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*
addopts = 
    -v
    --tb=short
    --strict-markers
    --disable-warnings
    --cov=siege_utilities
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-fail-under=85

# Markers for test organization
markers =
    unit: Unit tests (fast, no external dependencies)
    integration: Integration tests (slower, may require external services)
    slow: Slow tests (marked for optional execution)
    client: Client configuration tests
    connection: Connection management tests
    config: Configuration management tests
    core: Core utility tests
    files: File operation tests
    distributed: Distributed computing tests
    geo: Geospatial tests
    hygiene: Code hygiene tests
    multi_engine: Multi-engine architecture tests
    svg_markers: SVG marker functionality tests
    database: Database connection tests
    sedona: Apache Sedona spatial tests
    analytics: Analytics integration tests
    batch_processing: Batch processing tests
    map_generation: Map generation tests

# Test filtering
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning

# Coverage configuration
[coverage:run]
source = siege_utilities
omit = 
    */tests/*
    */test_*
    setup.py
    */__init__.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod
